################################
################################
########## 2024-05-10 ##########
################################
################################



########################
### while문 for문 차이 ###
########################

## for문
시작과 끝을 알고 있을 때 사용할 수 있다.
지역변수 사용

## while문
언제 반복문을 끝날지 모를 때 사용한다.
전역변수 사용
누적합 구하는 곳에서 많이 사용된다.
# 사용법
while(True인 동안은 무한반복)

## for문과 while문의 차이
시작값이 문자 밖에 있는지 안에 있는지의 차이이다.



#########################
### break / continue ###
#########################

## break
반복문을 벗어날 때 사용한다.
내가 속해있는 그 구문의 반복문을 탈출한다.

# 예시
sum = 0

while 1:                    ------ (1)
    while 1:                ------ (2)
        sum += 1
        if sum == 15:
            break

여기서의 break는 (2)번 while문을 탈출하게 된다.

## continue
현재의 반복문만 벗어나게 되고 다음의 반복문을 실행한다.



###############
### 기본 함수 ###
###############

## min()
리스트 내부에서 최솟값을 찾는다.

## max()
리스트 내부에서 최댓값을 찾는다.

## sum()
리스트 내부에서 값을 모두 더한다.

## reversed()
리스트를 뒤집는다.

## enumerate()
현재 인덱스가 몇 번째인지 확인한다.



##################
### enumerate ###
##################

리터러블한 객체에 사용할 수 있는 함수이다.

# 예시
_iterableObject = []

for i in range(0, len(_iterableObject)):
    print(i)

for index, item in enumberate(items):
    print(index)

이렇게 아래의 코드처럼 index만을 따로 떼서 사용할 수 있다.


################
### 이터레이터 ###
################

반복할 수 있는 것을 "이터레이터"라고 부른다.
이터레이터에는 리스트, 딕셔너리, 문자열, 튜플, 등이 있다.



##############
### 매개변수 ###
##############

## 가인수
선언할 때 부르는 인수
파라미터라고 부름

## 실인수
호출할 때 부르는 인수
아규먼트라고 부름

## 매개변수
( )안에 들어가는 변수



##############
### return ###
##############

# 예시1
def 함수명(a, b):
    pass

위와 같은 코드가 있을 때, 위의 코드는 return None이 생략되어 있다.

# 예시2
def 함수명(a, b):
    return 123
    ...
    code
    ...

위와 같은 코드에서 return 다음 코드는 실행안된다.



###########
### 튜플 ###
###########

# 형태
(데이터, 데이터, 데이터, ...)

# 예시
_tuple = 10, 20, 30, 40

위 코드는 튜플을 입력한 것이다.



##########
## 함수 ##
##########

함수는 단일값을 리턴한다.



#########
## 함수 ##
#########

## 익명함수(무명함수)

이름이 있어야 호출하는데, 이름조차 부를일이 없는 함수를 "익명함수(무명함수)"라고 한다.
함수가 함수를 인자로 쓰는경우가 있는데


## 일반함수

# 형태1
def function_name(x, y):
    return x * y

# 형태2
lambda x, y : x * y
첫 번째 x는 입력받는 것, 뒤의 x*x는 출력을 의미한다.



######################
## map()과 filter() ##
######################

첫 번째 인자로 함수를 받는 함수이다.

# map() 형태
map(일반함수, 리스트)
리스트 형태로 리턴한다.



##########
## 파일 ##
##########

_filePath = "/Users/lim_younghoon/Desktop/SK_Networks_AI/workspace01/project01/2024-05-08.txt"
_openedFile = open(_filePath)